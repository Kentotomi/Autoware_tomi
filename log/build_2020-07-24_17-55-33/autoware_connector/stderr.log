In file included from /opt/ros/melodic/include/ros/ros.h:40:0,
                 from /home/autoware/Autoware/src/autoware/core_perception/autoware_connector/nodes/can_odometry/can_odometry_node.cpp:18:
/home/autoware/Autoware/src/autoware/core_perception/autoware_connector/nodes/can_odometry/can_odometry_core.h: In member function ‘void autoware_connector::Odometry::updateOdometry(double, double, const ros::Time&)’:
/opt/ros/melodic/include/ros/console.h:348:176: warning: format ‘%f’ expects a matching ‘double’ argument [-Wformat=]
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__)
                                                                                                                                                                                ^
/opt/ros/melodic/include/ros/console.h:351:5: note: in expansion of macro ‘ROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER’
     ROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER(NULL, __VA_ARGS__)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/melodic/include/ros/console.h:387:7: note: in expansion of macro ‘ROSCONSOLE_PRINT_AT_LOCATION’
       ROSCONSOLE_PRINT_AT_LOCATION(__VA_ARGS__); \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/melodic/include/ros/console.h:572:35: note: in expansion of macro ‘ROS_LOG_COND’
 #define ROS_LOG(level, name, ...) ROS_LOG_COND(true, level, name, __VA_ARGS__)
                                   ^~~~~~~~~~~~
/opt/ros/melodic/include/rosconsole/macros_generated.h:110:23: note: in expansion of macro ‘ROS_LOG’
 #define ROS_INFO(...) ROS_LOG(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
                       ^~~~~~~
/home/autoware/Autoware/src/autoware/core_perception/autoware_connector/nodes/can_odometry/can_odometry_core.h:60:5: note: in expansion of macro ‘ROS_INFO’
     ROS_INFO("dt : %f delta (x y th) : (%f %f %f %f)", dt, delta_x, delta_y, delta_th);
     ^
In file included from /opt/ros/melodic/include/ros/ros.h:40:0,
                 from /home/autoware/Autoware/src/autoware/core_perception/autoware_connector/nodes/can_odometry/can_odometry_core.h:23,
                 from /home/autoware/Autoware/src/autoware/core_perception/autoware_connector/nodes/can_odometry/can_odometry_core.cpp:17:
/home/autoware/Autoware/src/autoware/core_perception/autoware_connector/nodes/can_odometry/can_odometry_core.h: In member function ‘void autoware_connector::Odometry::updateOdometry(double, double, const ros::Time&)’:
/opt/ros/melodic/include/ros/console.h:348:176: warning: format ‘%f’ expects a matching ‘double’ argument [-Wformat=]
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__)
                                                                                                                                                                                ^
/opt/ros/melodic/include/ros/console.h:351:5: note: in expansion of macro ‘ROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER’
     ROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER(NULL, __VA_ARGS__)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/melodic/include/ros/console.h:387:7: note: in expansion of macro ‘ROSCONSOLE_PRINT_AT_LOCATION’
       ROSCONSOLE_PRINT_AT_LOCATION(__VA_ARGS__); \
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/melodic/include/ros/console.h:572:35: note: in expansion of macro ‘ROS_LOG_COND’
 #define ROS_LOG(level, name, ...) ROS_LOG_COND(true, level, name, __VA_ARGS__)
                                   ^~~~~~~~~~~~
/opt/ros/melodic/include/rosconsole/macros_generated.h:110:23: note: in expansion of macro ‘ROS_LOG’
 #define ROS_INFO(...) ROS_LOG(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
                       ^~~~~~~
/home/autoware/Autoware/src/autoware/core_perception/autoware_connector/nodes/can_odometry/can_odometry_core.h:60:5: note: in expansion of macro ‘ROS_INFO’
     ROS_INFO("dt : %f delta (x y th) : (%f %f %f %f)", dt, delta_x, delta_y, delta_th);
     ^
